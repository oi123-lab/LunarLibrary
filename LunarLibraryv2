local Lunar = {}
Lunar.__index = Lunar

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Configurações de estilo
local COLORS = {
    Background = Color3.fromRGB(20,20,20),
    BackgroundTransparency = 0.3,
    Header = Color3.fromRGB(15,15,15),
    TextColor = Color3.new(1,1,1),
    Accent = Color3.fromRGB(70,130,180), -- steel blue
    ToggleOn = Color3.fromRGB(0,170,255),
    ToggleOff = Color3.fromRGB(100,100,100)
}

-- Cria janela principal
function Lunar:CreateWindow(title)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "LunarLibrary"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = game:GetService("CoreGui")

    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 480, 0, 320)
    MainFrame.Position = UDim2.new(0.5, -240, 0.5, -160)
    MainFrame.BackgroundColor3 = COLORS.Background
    MainFrame.BackgroundTransparency = COLORS.BackgroundTransparency
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Parent = ScreenGui
    MainFrame.Active = true
    MainFrame.Draggable = true

    -- Cabeçalho
    local Header = Instance.new("Frame")
    Header.Name = "Header"
    Header.Size = UDim2.new(1, 0, 0, 30)
    Header.BackgroundColor3 = COLORS.Header
    Header.BorderSizePixel = 0
    Header.Parent = MainFrame

    -- Ícone lua preta no header (simples círculo preto)
    local MoonIcon = Instance.new("Frame")
    MoonIcon.Name = "MoonIcon"
    MoonIcon.Size = UDim2.new(0, 20, 0, 20)
    MoonIcon.Position = UDim2.new(0, 8, 0, 5)
    MoonIcon.BackgroundColor3 = Color3.fromRGB(0,0,0)
    MoonIcon.BorderSizePixel = 0
    MoonIcon.Parent = Header
    MoonIcon.AnchorPoint = Vector2.new(0, 0)

    -- Texto do título
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "TitleLabel"
    TitleLabel.Text = title or "Lunar Library"
    TitleLabel.Font = Enum.Font.Gotham
    TitleLabel.TextSize = 16
    TitleLabel.TextColor3 = COLORS.TextColor
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Position = UDim2.new(0, 36, 0, 5)
    TitleLabel.Size = UDim2.new(0, 200, 0, 20)
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = Header

    -- Botões no header: Minimizar e Fechar
    local function CreateHeaderButton(text, posX)
        local btn = Instance.new("TextButton")
        btn.Text = text
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 18
        btn.TextColor3 = COLORS.TextColor
        btn.BackgroundColor3 = Color3.fromRGB(30,30,30)
        btn.BorderSizePixel = 0
        btn.Size = UDim2.new(0, 30, 1, 0)
        btn.Position = UDim2.new(1, posX, 0, 0)
        btn.Parent = Header
        return btn
    end

    local BtnMinimize = CreateHeaderButton("-", -65)
    local BtnClose = CreateHeaderButton("X", -30)

    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "Content"
    contentFrame.BackgroundTransparency = 1
    contentFrame.Size = UDim2.new(1, 0, 1, -30)
    contentFrame.Position = UDim2.new(0, 0, 0, 30)
    contentFrame.Parent = MainFrame

    -- Minimizar/Restaurar
    local minimized = false
    BtnMinimize.MouseButton1Click:Connect(function()
        minimized = not minimized
        if minimized then
            contentFrame.Visible = false
            MainFrame.Size = UDim2.new(0, 200, 0, 30)
            TitleLabel.Text = title:sub(1, 12) .. "..."
        else
            contentFrame.Visible = true
            MainFrame.Size = UDim2.new(0, 480, 0, 320)
            TitleLabel.Text = title
        end
    end)

    -- Fechar
    BtnClose.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)

    local window = {}
    window.MainFrame = MainFrame
    window.Content = contentFrame
    window.TitleLabel = TitleLabel
    window.AddButton = function(self, btnText, callback)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(1, -20, 0, 30)
        btn.Position = UDim2.new(0, 10, 0, #self.Content:GetChildren() * 35)
        btn.BackgroundColor3 = Color3.fromRGB(40,40,40)
        btn.BorderSizePixel = 0
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 16
        btn.TextColor3 = COLORS.TextColor
        btn.Text = btnText
        btn.Parent = self.Content
        btn.MouseButton1Click:Connect(function()
            pcall(callback)
        end)
    end

    window.AddToggle = function(self, label, default, callback)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, -20, 0, 30)
        container.Position = UDim2.new(0, 10, 0, #self.Content:GetChildren() * 35)
        container.BackgroundTransparency = 1
        container.Parent = self.Content

        local text = Instance.new("TextLabel")
        text.Text = label
        text.TextColor3 = COLORS.TextColor
        text.BackgroundTransparency = 1
        text.Size = UDim2.new(1, -40, 1, 0)
        text.Font = Enum.Font.Gotham
        text.TextSize = 16
        text.TextXAlignment = Enum.TextXAlignment.Left
        text.Parent = container

        local toggle = Instance.new("Frame")
        toggle.Size = UDim2.new(0, 30, 0, 20)
        toggle.Position = UDim2.new(1, -30, 0, 5)
        toggle.BackgroundColor3 = default and COLORS.ToggleOn or COLORS.ToggleOff
        toggle.BorderSizePixel = 0
        toggle.Parent = container
        toggle.Active = true

        local toggled = default

        toggle.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                toggled = not toggled
                toggle.BackgroundColor3 = toggled and COLORS.ToggleOn or COLORS.ToggleOff
                pcall(callback, toggled)
            end
        end)
    end

    window.AddSlider = function(self, label, min, max, default, callback)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, -20, 0, 40)
        container.Position = UDim2.new(0, 10, 0, #self.Content:GetChildren() * 45)
        container.BackgroundTransparency = 1
        container.Parent = self.Content

        local text = Instance.new("TextLabel")
        text.Text = label .. ": " .. tostring(default)
        text.TextColor3 = COLORS.TextColor
        text.BackgroundTransparency = 1
        text.Size = UDim2.new(1, 0, 0, 20)
        text.Font = Enum.Font.Gotham
        text.TextSize = 16
        text.TextXAlignment = Enum.TextXAlignment.Left
        text.Parent = container

        local sliderBg = Instance.new("Frame")
        sliderBg.Size = UDim2.new(1, 0, 0, 10)
        sliderBg.Position = UDim2.new(0, 0, 0, 25)
        sliderBg.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        sliderBg.BorderSizePixel = 0
        sliderBg.Parent = container

        local sliderFill = Instance.new("Frame")
        sliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
        sliderFill.BackgroundColor3 = COLORS.Accent
        sliderFill.BorderSizePixel = 0
        sliderFill.Parent = sliderBg

        local dragging = false
        sliderBg.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
            end
        end)

        sliderBg.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local relativeX = math.clamp(input.Position.X - sliderBg.AbsolutePosition.X, 0, sliderBg.AbsoluteSize.X)
                local value = min + (relativeX / sliderBg.AbsoluteSize.X) * (max - min)
                value = math.floor(value * 100) / 100
                sliderFill.Size = UDim2.new(relativeX / sliderBg.AbsoluteSize.X, 0, 1, 0)
                text.Text = label .. ": " .. tostring(value)
                pcall(callback, value)
            end
        end)
    end

    window.AddTextbox = function(self, label, placeholder, callback)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, -20, 0, 35)
        container.Position = UDim2.new(0, 10, 0, #self.Content:GetChildren() * 40)
        container.BackgroundTransparency = 1
        container.Parent = self.Content

        local textLabel = Instance.new("TextLabel")
        textLabel.Text = label
        textLabel.TextColor3 = COLORS.TextColor
        textLabel.BackgroundTransparency = 1
        textLabel.Size = UDim2.new(1, -150, 1, 0)
        textLabel.Font = Enum.Font.Gotham
        textLabel.TextSize = 16
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.Parent = container

        local textbox = Instance.new("TextBox")
        textbox.Size = UDim2.new(0, 140, 1, 0)
        textbox.Position = UDim2.new(1, -140, 0, 0)
        textbox.Text = ""
        textbox.PlaceholderText = placeholder or ""
        textbox.ClearTextOnFocus = false
        textbox.Font = Enum.Font.Gotham
        textbox.TextSize = 16
        textbox.TextColor3 = COLORS.TextColor
        textbox.BackgroundColor3 = Color3.fromRGB(40,40,40)
        textbox.BorderSizePixel = 0
        textbox.Parent = container

        textbox.FocusLost:Connect(function(enterPressed)
            if enterPressed then
                pcall(callback, textbox.Text)
            end
        end)
    end

    window.AddDropdown = function(self, label, options, callback)
        local container = Instance.new("Frame")
        container.Size = UDim2.new(1, -20, 0, 35)
        container.Position = UDim2.new(0, 10, 0, #self.Content:GetChildren() * 40)
        container.BackgroundTransparency = 1
        container.Parent = self.Content

        local textLabel = Instance.new("TextLabel")
        textLabel.Text = label
        textLabel.TextColor3 = COLORS.TextColor
        textLabel.BackgroundTransparency = 1
        textLabel.Size = UDim2.new(1, -150, 1, 0)
        textLabel.Font = Enum.Font.Gotham
        textLabel.TextSize = 16
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.Parent = container

        local dropdownBtn = Instance.new("TextButton")
        dropdownBtn.Size = UDim2.new(0, 140, 1, 0)
        dropdownBtn.Position = UDim2.new(1, -140, 0, 0)
        dropdownBtn.Text = options[1] or "Select"
        dropdownBtn.Font = Enum.Font.Gotham
        dropdownBtn.TextSize = 16
        dropdownBtn.TextColor3 = COLORS.TextColor
        dropdownBtn.BackgroundColor3 = Color3.fromRGB(40,40,40)
        dropdownBtn.BorderSizePixel = 0
        dropdownBtn.Parent = container

        local dropdownOpen = false
        local dropdownList = Instance.new("Frame")
        dropdownList.Size = UDim2.new(0, 140, 0, math.min(5, #options) * 30)
        dropdownList.Position = UDim2.new(0, 0, 1, 0)
        dropdownList.BackgroundColor3 = Color3.fromRGB(40,40,40)
        dropdownList.BorderSizePixel = 0
        dropdownList.Visible = false
        dropdownList.ClipsDescendants = true
        dropdownList.Parent = dropdownBtn

        local uiListLayout = Instance.new("UIListLayout")
        uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        uiListLayout.Parent = dropdownList

        for i, option in ipairs(options) do
            local optBtn = Instance.new("TextButton")
            optBtn.Size = UDim2.new(1, 0, 0, 30)
            optBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
            optBtn.BorderSizePixel = 0
            optBtn.Text = option
            optBtn.Font = Enum.Font.Gotham
            optBtn.TextSize = 16
            optBtn.TextColor3 = COLORS.TextColor
            optBtn.Parent = dropdownList

            optBtn.MouseEnter:Connect(function()
                optBtn.BackgroundColor3 = COLORS.Accent
            end)
            optBtn.MouseLeave:Connect(function()
                optBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
            end)

            optBtn.MouseButton1Click:Connect(function()
                dropdownBtn.Text = option
                dropdownList.Visible = false
                dropdownOpen = false
                pcall(callback, option)
            end)
        end

        dropdownBtn.MouseButton1Click:Connect(function()
            dropdownOpen = not dropdownOpen
            dropdownList.Visible = dropdownOpen
        end)
    end

    return setmetatable(window, Lunar)
end

return Lunar
